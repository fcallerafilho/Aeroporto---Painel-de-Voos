Version 4.0 HI-TECH Software Intermediate Code
"22 ./io.h
[; ;./io.h: 22: void pinMode(int pin, int type);
[v _pinMode `(v ~T0 @X0 0 ef2`i`i ]
"20 soft_i2c.c
[; ;soft_i2c.c: 20:     pinMode(PIN_C4,1);
[c E10 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 .. ]
[n E10 pin_label PIN_A0 PIN_A1 PIN_A2 PIN_A3 PIN_A4 PIN_A5 PIN_A6 PIN_A7 PIN_B0 PIN_B1 PIN_B2 PIN_B3 PIN_B4 PIN_B5 PIN_B6 PIN_B7 PIN_C0 PIN_C1 PIN_C2 PIN_C3 PIN_C4 PIN_C5 PIN_C6 PIN_C7 PIN_D0 PIN_D1 PIN_D2 PIN_D3 PIN_D4 PIN_D5 PIN_D6 PIN_D7 PIN_E0 PIN_E1 PIN_E2 PIN_E3 PIN_E4 PIN_E5 PIN_E6 PIN_E7  ]
"21 ./io.h
[; ;./io.h: 21: int digitalRead(int pin);
[v _digitalRead `(i ~T0 @X0 0 ef1`i ]
"20
[; ;./io.h: 20: void digitalWrite(int pin, int value);
[v _digitalWrite `(v ~T0 @X0 0 ef2`i`i ]
"18 soft_i2c.c
[; ;soft_i2c.c: 18: void i2cInit(void) {
[v _i2cInit `(v ~T0 @X0 1 ef ]
{
[e :U _i2cInit ]
[f ]
"20
[; ;soft_i2c.c: 20:     pinMode(PIN_C4,1);
[e ( _pinMode (2 , . `E10 20 -> 1 `i ]
"21
[; ;soft_i2c.c: 21:     pinMode(PIN_C5,1);
[e ( _pinMode (2 , . `E10 21 -> 1 `i ]
"22
[; ;soft_i2c.c: 22: }
[e :UE 1 ]
}
"26
[; ;soft_i2c.c: 26: void I2C_delay(void) {
[v _I2C_delay `(v ~T0 @X0 1 ef ]
{
[e :U _I2C_delay ]
[f ]
"27
[; ;soft_i2c.c: 27:     volatile int v;
[v _v `Vi ~T0 @X0 1 a ]
"28
[; ;soft_i2c.c: 28:     int i;
[v _i `i ~T0 @X0 1 a ]
"29
[; ;soft_i2c.c: 29:     for (i = 0; i < 10 / 2; i++)
{
[e = _i -> 0 `i ]
[e $ < _i / -> 10 `i -> 2 `i 3  ]
[e $U 4  ]
[e :U 3 ]
"30
[; ;soft_i2c.c: 30:         v;
[e _v ]
[e ++ _i -> 1 `i ]
[e $ < _i / -> 10 `i -> 2 `i 3  ]
[e :U 4 ]
}
"31
[; ;soft_i2c.c: 31: }
[e :UE 2 ]
}
"33
[; ;soft_i2c.c: 33: unsigned char read_SCL(void)
[v _read_SCL `(uc ~T0 @X0 1 ef ]
"34
[; ;soft_i2c.c: 34: {
{
[e :U _read_SCL ]
[f ]
"35
[; ;soft_i2c.c: 35:     pinMode(PIN_C5,1);
[e ( _pinMode (2 , . `E10 21 -> 1 `i ]
"36
[; ;soft_i2c.c: 36:     return !!digitalRead(PIN_C5);
[e ) -> -> ! ! != ( _digitalRead (1 . `E10 21 -> 0 `i `i `uc ]
[e $UE 6  ]
"37
[; ;soft_i2c.c: 37: }
[e :UE 6 ]
}
"38
[; ;soft_i2c.c: 38: unsigned char read_SDA(void)
[v _read_SDA `(uc ~T0 @X0 1 ef ]
"39
[; ;soft_i2c.c: 39: {
{
[e :U _read_SDA ]
[f ]
"40
[; ;soft_i2c.c: 40:     pinMode(PIN_C4,1);
[e ( _pinMode (2 , . `E10 20 -> 1 `i ]
"41
[; ;soft_i2c.c: 41:     return !!digitalRead(PIN_C4);
[e ) -> -> ! ! != ( _digitalRead (1 . `E10 20 -> 0 `i `i `uc ]
[e $UE 7  ]
"43
[; ;soft_i2c.c: 43: }
[e :UE 7 ]
}
"44
[; ;soft_i2c.c: 44: void clear_SCL(void)
[v _clear_SCL `(v ~T0 @X0 1 ef ]
"45
[; ;soft_i2c.c: 45: {
{
[e :U _clear_SCL ]
[f ]
"46
[; ;soft_i2c.c: 46:     pinMode(PIN_C5,0);
[e ( _pinMode (2 , . `E10 21 -> 0 `i ]
"47
[; ;soft_i2c.c: 47:     digitalWrite(PIN_C5,0);
[e ( _digitalWrite (2 , . `E10 21 -> 0 `i ]
"48
[; ;soft_i2c.c: 48: }
[e :UE 8 ]
}
"50
[; ;soft_i2c.c: 50: void clear_SDA(void)
[v _clear_SDA `(v ~T0 @X0 1 ef ]
"51
[; ;soft_i2c.c: 51: {
{
[e :U _clear_SDA ]
[f ]
"52
[; ;soft_i2c.c: 52:     pinMode(PIN_C4,0);
[e ( _pinMode (2 , . `E10 20 -> 0 `i ]
"53
[; ;soft_i2c.c: 53:     digitalWrite(PIN_C4,0);
[e ( _digitalWrite (2 , . `E10 20 -> 0 `i ]
"54
[; ;soft_i2c.c: 54: }
[e :UE 9 ]
}
"56
[; ;soft_i2c.c: 56: unsigned char started = 0;
[v _started `uc ~T0 @X0 1 e ]
[i _started
-> -> 0 `i `uc
]
"57
[; ;soft_i2c.c: 57: void i2c_start(void) {
[v _i2c_start `(v ~T0 @X0 1 ef ]
{
[e :U _i2c_start ]
[f ]
"59
[; ;soft_i2c.c: 59:     if (started) {
[e $ ! != -> _started `i -> 0 `i 11  ]
{
"60
[; ;soft_i2c.c: 60:         read_SDA();
[e ( _read_SDA ..  ]
"61
[; ;soft_i2c.c: 61:         I2C_delay();
[e ( _I2C_delay ..  ]
"62
[; ;soft_i2c.c: 62:         while (read_SCL() == 0);
[e $U 12  ]
[e :U 13 ]
[e :U 12 ]
[e $ == -> ( _read_SCL ..  `i -> 0 `i 13  ]
[e :U 14 ]
"64
[; ;soft_i2c.c: 64:         I2C_delay();
[e ( _I2C_delay ..  ]
"65
[; ;soft_i2c.c: 65:     }
}
[e :U 11 ]
"66
[; ;soft_i2c.c: 66:     if (read_SDA() == 0) {
[e $ ! == -> ( _read_SDA ..  `i -> 0 `i 15  ]
{
"68
[; ;soft_i2c.c: 68:     }
}
[e :U 15 ]
"70
[; ;soft_i2c.c: 70:     clear_SDA();
[e ( _clear_SDA ..  ]
"71
[; ;soft_i2c.c: 71:     I2C_delay();
[e ( _I2C_delay ..  ]
"72
[; ;soft_i2c.c: 72:     clear_SCL();
[e ( _clear_SCL ..  ]
"73
[; ;soft_i2c.c: 73:     started = 1;
[e = _started -> -> 1 `i `uc ]
"74
[; ;soft_i2c.c: 74: }
[e :UE 10 ]
}
"76
[; ;soft_i2c.c: 76: void i2c_stop(void) {
[v _i2c_stop `(v ~T0 @X0 1 ef ]
{
[e :U _i2c_stop ]
[f ]
"78
[; ;soft_i2c.c: 78:     clear_SDA();
[e ( _clear_SDA ..  ]
"79
[; ;soft_i2c.c: 79:     I2C_delay();
[e ( _I2C_delay ..  ]
"80
[; ;soft_i2c.c: 80:     while (read_SCL() == 0);
[e $U 17  ]
[e :U 18 ]
[e :U 17 ]
[e $ == -> ( _read_SCL ..  `i -> 0 `i 18  ]
[e :U 19 ]
"81
[; ;soft_i2c.c: 81:     I2C_delay();
[e ( _I2C_delay ..  ]
"82
[; ;soft_i2c.c: 82:     if (read_SDA() == 0) {
[e $ ! == -> ( _read_SDA ..  `i -> 0 `i 20  ]
{
"84
[; ;soft_i2c.c: 84:     }
}
[e :U 20 ]
"85
[; ;soft_i2c.c: 85:     I2C_delay();
[e ( _I2C_delay ..  ]
"86
[; ;soft_i2c.c: 86:     started = 0;
[e = _started -> -> 0 `i `uc ]
"87
[; ;soft_i2c.c: 87: }
[e :UE 16 ]
}
"89
[; ;soft_i2c.c: 89: void i2c_write_bit(unsigned char bit) {
[v _i2c_write_bit `(v ~T0 @X0 1 ef1`uc ]
{
[e :U _i2c_write_bit ]
[v _bit `uc ~T0 @X0 1 r1 ]
[f ]
"90
[; ;soft_i2c.c: 90:     if (bit) {
[e $ ! != -> _bit `i -> 0 `i 22  ]
{
"91
[; ;soft_i2c.c: 91:         read_SDA();
[e ( _read_SDA ..  ]
"92
[; ;soft_i2c.c: 92:     } else {
}
[e $U 23  ]
[e :U 22 ]
{
"93
[; ;soft_i2c.c: 93:         clear_SDA();
[e ( _clear_SDA ..  ]
"94
[; ;soft_i2c.c: 94:     }
}
[e :U 23 ]
"95
[; ;soft_i2c.c: 95:     I2C_delay();
[e ( _I2C_delay ..  ]
"96
[; ;soft_i2c.c: 96:     while (read_SCL() == 0);
[e $U 24  ]
[e :U 25 ]
[e :U 24 ]
[e $ == -> ( _read_SCL ..  `i -> 0 `i 25  ]
[e :U 26 ]
"97
[; ;soft_i2c.c: 97:     if (bit && read_SDA() == 0) {
[e $ ! && != -> _bit `i -> 0 `i == -> ( _read_SDA ..  `i -> 0 `i 27  ]
{
"99
[; ;soft_i2c.c: 99:     }
}
[e :U 27 ]
"100
[; ;soft_i2c.c: 100:     I2C_delay();
[e ( _I2C_delay ..  ]
"101
[; ;soft_i2c.c: 101:     clear_SCL();
[e ( _clear_SCL ..  ]
"102
[; ;soft_i2c.c: 102:     I2C_delay();
[e ( _I2C_delay ..  ]
"103
[; ;soft_i2c.c: 103: }
[e :UE 21 ]
}
"105
[; ;soft_i2c.c: 105: unsigned char i2c_read_bit(void) {
[v _i2c_read_bit `(uc ~T0 @X0 1 ef ]
{
[e :U _i2c_read_bit ]
[f ]
"106
[; ;soft_i2c.c: 106:     unsigned char bit;
[v _bit `uc ~T0 @X0 1 a ]
"107
[; ;soft_i2c.c: 107:     read_SDA();
[e ( _read_SDA ..  ]
"108
[; ;soft_i2c.c: 108:     I2C_delay();
[e ( _I2C_delay ..  ]
"109
[; ;soft_i2c.c: 109:     while (read_SCL() == 0);
[e $U 29  ]
[e :U 30 ]
[e :U 29 ]
[e $ == -> ( _read_SCL ..  `i -> 0 `i 30  ]
[e :U 31 ]
"110
[; ;soft_i2c.c: 110:     bit = read_SDA();
[e = _bit ( _read_SDA ..  ]
"111
[; ;soft_i2c.c: 111:     I2C_delay();
[e ( _I2C_delay ..  ]
"112
[; ;soft_i2c.c: 112:     clear_SCL();
[e ( _clear_SCL ..  ]
"113
[; ;soft_i2c.c: 113:     I2C_delay();
[e ( _I2C_delay ..  ]
"114
[; ;soft_i2c.c: 114:     return bit;
[e ) _bit ]
[e $UE 28  ]
"115
[; ;soft_i2c.c: 115: }
[e :UE 28 ]
}
"118
[; ;soft_i2c.c: 118: unsigned char i2cWriteByte(unsigned char send_start, unsigned char send_stop, unsigned char byte) {
[v _i2cWriteByte `(uc ~T0 @X0 1 ef3`uc`uc`uc ]
{
[e :U _i2cWriteByte ]
[v _send_start `uc ~T0 @X0 1 r1 ]
[v _send_stop `uc ~T0 @X0 1 r2 ]
[v _byte `uc ~T0 @X0 1 r3 ]
[f ]
"119
[; ;soft_i2c.c: 119:     unsigned char bit;
[v _bit `uc ~T0 @X0 1 a ]
"120
[; ;soft_i2c.c: 120:     unsigned char nack;
[v _nack `uc ~T0 @X0 1 a ]
"121
[; ;soft_i2c.c: 121:     if (send_start) {
[e $ ! != -> _send_start `i -> 0 `i 33  ]
{
"122
[; ;soft_i2c.c: 122:         i2c_start();
[e ( _i2c_start ..  ]
"123
[; ;soft_i2c.c: 123:     }
}
[e :U 33 ]
"124
[; ;soft_i2c.c: 124:     for (bit = 0; bit < 8; bit++) {
{
[e = _bit -> -> 0 `i `uc ]
[e $ < -> _bit `i -> 8 `i 34  ]
[e $U 35  ]
[e :U 34 ]
{
"125
[; ;soft_i2c.c: 125:         i2c_write_bit((byte & 0x80) != 0);
[e ( _i2c_write_bit (1 -> -> != & -> _byte `i -> 128 `i -> 0 `i `i `uc ]
"126
[; ;soft_i2c.c: 126:         byte <<= 1;
[e =<< _byte -> -> 1 `i `uc ]
"127
[; ;soft_i2c.c: 127:     }
}
[e ++ _bit -> -> 1 `i `uc ]
[e $ < -> _bit `i -> 8 `i 34  ]
[e :U 35 ]
}
"128
[; ;soft_i2c.c: 128:     nack = i2c_read_bit();
[e = _nack ( _i2c_read_bit ..  ]
"129
[; ;soft_i2c.c: 129:     if (send_stop) {
[e $ ! != -> _send_stop `i -> 0 `i 37  ]
{
"130
[; ;soft_i2c.c: 130:         i2c_stop();
[e ( _i2c_stop ..  ]
"131
[; ;soft_i2c.c: 131:     }
}
[e :U 37 ]
"132
[; ;soft_i2c.c: 132:     return nack;
[e ) _nack ]
[e $UE 32  ]
"133
[; ;soft_i2c.c: 133: }
[e :UE 32 ]
}
"136
[; ;soft_i2c.c: 136: unsigned char i2cReadByte(unsigned char nack, unsigned char send_stop) {
[v _i2cReadByte `(uc ~T0 @X0 1 ef2`uc`uc ]
{
[e :U _i2cReadByte ]
[v _nack `uc ~T0 @X0 1 r1 ]
[v _send_stop `uc ~T0 @X0 1 r2 ]
[f ]
"137
[; ;soft_i2c.c: 137:     unsigned char byte = 0;
[v _byte `uc ~T0 @X0 1 a ]
[e = _byte -> -> 0 `i `uc ]
"138
[; ;soft_i2c.c: 138:     unsigned bit;
[v _bit `ui ~T0 @X0 1 a ]
"139
[; ;soft_i2c.c: 139:     for (bit = 0; bit < 8; bit++) {
{
[e = _bit -> -> 0 `i `ui ]
[e $ < _bit -> -> 8 `i `ui 39  ]
[e $U 40  ]
[e :U 39 ]
{
"140
[; ;soft_i2c.c: 140:         byte = (byte << 1) | i2c_read_bit();
[e = _byte -> | << -> _byte `i -> 1 `i -> ( _i2c_read_bit ..  `i `uc ]
"141
[; ;soft_i2c.c: 141:     }
}
[e ++ _bit -> -> 1 `i `ui ]
[e $ < _bit -> -> 8 `i `ui 39  ]
[e :U 40 ]
}
"142
[; ;soft_i2c.c: 142:     i2c_write_bit(nack);
[e ( _i2c_write_bit (1 _nack ]
"143
[; ;soft_i2c.c: 143:     if (send_stop) {
[e $ ! != -> _send_stop `i -> 0 `i 42  ]
{
"144
[; ;soft_i2c.c: 144:         i2c_stop();
[e ( _i2c_stop ..  ]
"145
[; ;soft_i2c.c: 145:     }
}
[e :U 42 ]
"146
[; ;soft_i2c.c: 146:     return byte;
[e ) _byte ]
[e $UE 38  ]
"147
[; ;soft_i2c.c: 147: }
[e :UE 38 ]
}
